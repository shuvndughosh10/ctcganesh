{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\ganesh-photo-gallery-react\\\\src\\\\GoogleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleMap = ({\n  photos,\n  onMarkerClick,\n  selectedPhoto\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    // Initialize Google Map\n    if (window.google && mapRef.current && !map) {\n      const mapInstance = new window.google.maps.Map(mapRef.current, {\n        center: {\n          lat: 20.4625,\n          lng: 85.8828\n        },\n        // Cuttack city center coordinates\n        zoom: 14,\n        mapTypeId: 'roadmap',\n        disableDefaultUI: false,\n        zoomControl: true,\n        mapTypeControl: true,\n        scaleControl: true,\n        streetViewControl: true,\n        rotateControl: true,\n        fullscreenControl: true,\n        styles: [\n        // Enhanced dark theme for better visibility\n        {\n          elementType: \"geometry\",\n          stylers: [{\n            color: \"#1a1a2e\"\n          }]\n        }, {\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#9ca5b3\"\n          }]\n        }, {\n          elementType: \"labels.text.stroke\",\n          stylers: [{\n            color: \"#1a1a2e\"\n          }]\n        }, {\n          featureType: \"administrative\",\n          elementType: \"geometry.stroke\",\n          stylers: [{\n            color: \"#1F51FF\",\n            weight: 1\n          }]\n        }, {\n          featureType: \"administrative.locality\",\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#1F51FF\"\n          }]\n        }, {\n          featureType: \"poi\",\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#cccccc\"\n          }]\n        }, {\n          featureType: \"poi.park\",\n          elementType: \"geometry\",\n          stylers: [{\n            color: \"#263c3c\"\n          }]\n        }, {\n          featureType: \"road\",\n          elementType: \"geometry\",\n          stylers: [{\n            color: \"#38414e\"\n          }]\n        }, {\n          featureType: \"road\",\n          elementType: \"geometry.stroke\",\n          stylers: [{\n            color: \"#212a37\"\n          }]\n        }, {\n          featureType: \"road\",\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#9ca5b3\"\n          }]\n        }, {\n          featureType: \"road.highway\",\n          elementType: \"geometry\",\n          stylers: [{\n            color: \"#746855\"\n          }]\n        }, {\n          featureType: \"road.highway\",\n          elementType: \"geometry.stroke\",\n          stylers: [{\n            color: \"#1f2835\"\n          }]\n        }, {\n          featureType: \"road.highway\",\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#f3d19c\"\n          }]\n        }, {\n          featureType: \"transit\",\n          elementType: \"geometry\",\n          stylers: [{\n            color: \"#2f3948\"\n          }]\n        }, {\n          featureType: \"transit.station\",\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#d59563\"\n          }]\n        }, {\n          featureType: \"water\",\n          elementType: \"geometry\",\n          stylers: [{\n            color: \"#17263c\"\n          }]\n        }, {\n          featureType: \"water\",\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#515c6d\"\n          }]\n        }, {\n          featureType: \"water\",\n          elementType: \"labels.text.stroke\",\n          stylers: [{\n            color: \"#17263c\"\n          }]\n        }]\n      });\n      setMap(mapInstance);\n    }\n  }, [map]);\n  useEffect(() => {\n    // Add markers for each photo\n    if (map && photos.length > 0) {\n      // Clear existing markers\n      markers.forEach(marker => marker.setMap(null));\n      const newMarkers = photos.map((photo, index) => {\n        const isSelected = selectedPhoto && selectedPhoto.id === photo.id;\n        const markerSize = isSelected ? 50 : 40;\n        const markerColor = isSelected ? '#FF10F0' : '#1F51FF';\n        const strokeColor = isSelected ? '#FFD700' : '#FF10F0';\n        const marker = new window.google.maps.Marker({\n          position: photo.coordinates,\n          map: map,\n          title: photo.title,\n          animation: isSelected ? window.google.maps.Animation.BOUNCE : null,\n          icon: {\n            url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n              <svg width=\"${markerSize}\" height=\"${markerSize}\" viewBox=\"0 0 ${markerSize} ${markerSize}\" xmlns=\"http://www.w3.org/2000/svg\">\n                <defs>\n                  <filter id=\"glow\">\n                    <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n                    <feMerge> \n                      <feMergeNode in=\"coloredBlur\"/>\n                      <feMergeNode in=\"SourceGraphic\"/>\n                    </feMerge>\n                  </filter>\n                </defs>\n                <circle cx=\"${markerSize / 2}\" cy=\"${markerSize / 2}\" r=\"${markerSize / 2 - 3}\" fill=\"${markerColor}\" stroke=\"${strokeColor}\" stroke-width=\"3\" filter=\"url(#glow)\"/>\n                <circle cx=\"${markerSize / 2}\" cy=\"${markerSize / 2}\" r=\"${markerSize / 4}\" fill=\"#ffffff\"/>\n                <text x=\"${markerSize / 2}\" y=\"${markerSize / 2 + 4}\" text-anchor=\"middle\" fill=\"${markerColor}\" font-size=\"${markerSize > 40 ? '14' : '12'}\" font-weight=\"bold\">${index + 1}</text>\n              </svg>\n            `),\n            scaledSize: new window.google.maps.Size(markerSize, markerSize),\n            anchor: new window.google.maps.Point(markerSize / 2, markerSize / 2)\n          }\n        });\n\n        // Create enhanced info window\n        const infoWindow = new window.google.maps.InfoWindow({\n          content: `\n            <div style=\"\n              background: linear-gradient(135deg, #111111 0%, #1a1a2e 100%);\n              color: #ffffff;\n              max-width: 250px;\n              border-radius: 12px;\n              padding: 16px;\n              border: 2px solid #1F51FF;\n              box-shadow: 0 0 20px rgba(31, 81, 255, 0.3);\n            \">\n              <img src=\"${photo.img}\" alt=\"${photo.title}\" \n                   style=\"width: 100%; height: 140px; object-fit: cover; border-radius: 8px; margin-bottom: 12px; border: 1px solid rgba(31, 81, 255, 0.3);\">\n              <h3 style=\"margin: 0 0 8px 0; color: #1F51FF; font-size: 16px; font-weight: 600;\">\n                üïâÔ∏è ${photo.title}\n              </h3>\n              <p style=\"margin: 0 0 8px 0; font-size: 13px; color: #cccccc; display: flex; align-items: center; gap: 4px;\">\n                üìç ${photo.location}\n              </p>\n              <p style=\"margin: 0; font-size: 12px; color: #999999; line-height: 1.4;\">\n                ${photo.description}\n              </p>\n              <div style=\"margin-top: 12px; text-align: center;\">\n                <span style=\"background: linear-gradient(45deg, #1F51FF, #FF10F0); color: white; padding: 4px 12px; border-radius: 15px; font-size: 11px; font-weight: 600;\">\n                  Location ${index + 1}\n                </span>\n              </div>\n            </div>\n          `,\n          pixelOffset: new window.google.maps.Size(0, -10)\n        });\n        marker.addListener('click', () => {\n          // Close all other info windows\n          markers.forEach(m => m.infoWindow && m.infoWindow.close());\n          infoWindow.open(map, marker);\n          onMarkerClick && onMarkerClick(photo);\n        });\n\n        // Add hover effects\n        marker.addListener('mouseover', () => {\n          marker.setAnimation(window.google.maps.Animation.BOUNCE);\n        });\n        marker.addListener('mouseout', () => {\n          if (!isSelected) {\n            marker.setAnimation(null);\n          }\n        });\n        marker.infoWindow = infoWindow;\n\n        // Auto-open info window for selected photo\n        if (isSelected) {\n          infoWindow.open(map, marker);\n          map.panTo(photo.coordinates);\n          map.setZoom(16);\n        }\n        return marker;\n      });\n\n      // Add Cuttack city center marker\n      const cityMarker = new window.google.maps.Marker({\n        position: {\n          lat: 20.4625,\n          lng: 85.8828\n        },\n        map: map,\n        title: \"Cuttack City Center\",\n        icon: {\n          url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n            <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\n              <defs>\n                <filter id=\"cityGlow\">\n                  <feGaussianBlur stdDeviation=\"4\" result=\"coloredBlur\"/>\n                  <feMerge> \n                    <feMergeNode in=\"coloredBlur\"/>\n                    <feMergeNode in=\"SourceGraphic\"/>\n                  </feMerge>\n                </filter>\n              </defs>\n              <circle cx=\"30\" cy=\"30\" r=\"25\" fill=\"rgba(255, 215, 0, 0.2)\" stroke=\"#FFD700\" stroke-width=\"3\" stroke-dasharray=\"5,5\" filter=\"url(#cityGlow)\"/>\n              <text x=\"30\" y=\"25\" text-anchor=\"middle\" fill=\"#FFD700\" font-size=\"16\" font-weight=\"bold\">üèõÔ∏è</text>\n              <text x=\"30\" y=\"40\" text-anchor=\"middle\" fill=\"#FFD700\" font-size=\"8\" font-weight=\"bold\">CUTTACK</text>\n            </svg>\n          `),\n          scaledSize: new window.google.maps.Size(60, 60),\n          anchor: new window.google.maps.Point(30, 30)\n        }\n      });\n      const cityInfoWindow = new window.google.maps.InfoWindow({\n        content: `\n          <div style=\"\n            background: linear-gradient(135deg, #111111 0%, #1a1a2e 100%);\n            color: #ffffff;\n            max-width: 200px;\n            border-radius: 12px;\n            padding: 16px;\n            border: 2px solid #FFD700;\n            box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);\n            text-align: center;\n          \">\n            <h3 style=\"margin: 0 0 8px 0; color: #FFD700; font-size: 18px; font-weight: 600;\">\n              üèõÔ∏è Cuttack City Center\n            </h3>\n            <p style=\"margin: 0 0 8px 0; font-size: 13px; color: #cccccc;\">\n              Historic city in Odisha, India\n            </p>\n            <p style=\"margin: 0; font-size: 12px; color: #999999; line-height: 1.4;\">\n              Famous for silver filigree work, festivals, and rich cultural heritage\n            </p>\n          </div>\n        `\n      });\n      cityMarker.addListener('click', () => {\n        cityInfoWindow.open(map, cityMarker);\n      });\n      newMarkers.push(cityMarker);\n      setMarkers(newMarkers);\n    }\n  }, [map, photos, selectedPhoto, onMarkerClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      borderRadius: '15px',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMap, \"dsjKOQ3wEynPhzXsspLJ85tOBO8=\");\n_c = GoogleMap;\nexport default GoogleMap;\nvar _c;\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","GoogleMap","photos","onMarkerClick","selectedPhoto","_s","mapRef","map","setMap","markers","setMarkers","window","google","current","mapInstance","maps","Map","center","lat","lng","zoom","mapTypeId","disableDefaultUI","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","styles","elementType","stylers","color","featureType","weight","length","forEach","marker","newMarkers","photo","index","isSelected","id","markerSize","markerColor","strokeColor","Marker","position","coordinates","title","animation","Animation","BOUNCE","icon","url","encodeURIComponent","scaledSize","Size","anchor","Point","infoWindow","InfoWindow","content","img","location","description","pixelOffset","addListener","m","close","open","setAnimation","panTo","setZoom","cityMarker","cityInfoWindow","push","ref","style","width","height","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/ganesh-photo-gallery-react/src/GoogleMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst GoogleMap = ({ photos, onMarkerClick, selectedPhoto }) => {\r\n  const mapRef = useRef(null);\r\n  const [map, setMap] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Initialize Google Map\r\n    if (window.google && mapRef.current && !map) {\r\n      const mapInstance = new window.google.maps.Map(mapRef.current, {\r\n        center: { lat: 20.4625, lng: 85.8828 }, // Cuttack city center coordinates\r\n        zoom: 14,\r\n        mapTypeId: 'roadmap',\r\n        disableDefaultUI: false,\r\n        zoomControl: true,\r\n        mapTypeControl: true,\r\n        scaleControl: true,\r\n        streetViewControl: true,\r\n        rotateControl: true,\r\n        fullscreenControl: true,\r\n        styles: [\r\n          // Enhanced dark theme for better visibility\r\n          { elementType: \"geometry\", stylers: [{ color: \"#1a1a2e\" }] },\r\n          { elementType: \"labels.text.fill\", stylers: [{ color: \"#9ca5b3\" }] },\r\n          { elementType: \"labels.text.stroke\", stylers: [{ color: \"#1a1a2e\" }] },\r\n          {\r\n            featureType: \"administrative\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [{ color: \"#1F51FF\", weight: 1 }]\r\n          },\r\n          {\r\n            featureType: \"administrative.locality\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#1F51FF\" }]\r\n          },\r\n          {\r\n            featureType: \"poi\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#cccccc\" }]\r\n          },\r\n          {\r\n            featureType: \"poi.park\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#263c3c\" }]\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#38414e\" }]\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [{ color: \"#212a37\" }]\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#9ca5b3\" }]\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#746855\" }]\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [{ color: \"#1f2835\" }]\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#f3d19c\" }]\r\n          },\r\n          {\r\n            featureType: \"transit\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#2f3948\" }]\r\n          },\r\n          {\r\n            featureType: \"transit.station\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#d59563\" }]\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#17263c\" }]\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#515c6d\" }]\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"labels.text.stroke\",\r\n            stylers: [{ color: \"#17263c\" }]\r\n          }\r\n        ]\r\n      });\r\n      setMap(mapInstance);\r\n    }\r\n  }, [map]);\r\n\r\n  useEffect(() => {\r\n    // Add markers for each photo\r\n    if (map && photos.length > 0) {\r\n      // Clear existing markers\r\n      markers.forEach(marker => marker.setMap(null));\r\n\r\n      const newMarkers = photos.map((photo, index) => {\r\n        const isSelected = selectedPhoto && selectedPhoto.id === photo.id;\r\n        const markerSize = isSelected ? 50 : 40;\r\n        const markerColor = isSelected ? '#FF10F0' : '#1F51FF';\r\n        const strokeColor = isSelected ? '#FFD700' : '#FF10F0';\r\n        \r\n        const marker = new window.google.maps.Marker({\r\n          position: photo.coordinates,\r\n          map: map,\r\n          title: photo.title,\r\n          animation: isSelected ? window.google.maps.Animation.BOUNCE : null,\r\n          icon: {\r\n            url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\r\n              <svg width=\"${markerSize}\" height=\"${markerSize}\" viewBox=\"0 0 ${markerSize} ${markerSize}\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <defs>\r\n                  <filter id=\"glow\">\r\n                    <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\r\n                    <feMerge> \r\n                      <feMergeNode in=\"coloredBlur\"/>\r\n                      <feMergeNode in=\"SourceGraphic\"/>\r\n                    </feMerge>\r\n                  </filter>\r\n                </defs>\r\n                <circle cx=\"${markerSize/2}\" cy=\"${markerSize/2}\" r=\"${markerSize/2 - 3}\" fill=\"${markerColor}\" stroke=\"${strokeColor}\" stroke-width=\"3\" filter=\"url(#glow)\"/>\r\n                <circle cx=\"${markerSize/2}\" cy=\"${markerSize/2}\" r=\"${markerSize/4}\" fill=\"#ffffff\"/>\r\n                <text x=\"${markerSize/2}\" y=\"${markerSize/2 + 4}\" text-anchor=\"middle\" fill=\"${markerColor}\" font-size=\"${markerSize > 40 ? '14' : '12'}\" font-weight=\"bold\">${index + 1}</text>\r\n              </svg>\r\n            `),\r\n            scaledSize: new window.google.maps.Size(markerSize, markerSize),\r\n            anchor: new window.google.maps.Point(markerSize/2, markerSize/2)\r\n          }\r\n        });\r\n\r\n        // Create enhanced info window\r\n        const infoWindow = new window.google.maps.InfoWindow({\r\n          content: `\r\n            <div style=\"\r\n              background: linear-gradient(135deg, #111111 0%, #1a1a2e 100%);\r\n              color: #ffffff;\r\n              max-width: 250px;\r\n              border-radius: 12px;\r\n              padding: 16px;\r\n              border: 2px solid #1F51FF;\r\n              box-shadow: 0 0 20px rgba(31, 81, 255, 0.3);\r\n            \">\r\n              <img src=\"${photo.img}\" alt=\"${photo.title}\" \r\n                   style=\"width: 100%; height: 140px; object-fit: cover; border-radius: 8px; margin-bottom: 12px; border: 1px solid rgba(31, 81, 255, 0.3);\">\r\n              <h3 style=\"margin: 0 0 8px 0; color: #1F51FF; font-size: 16px; font-weight: 600;\">\r\n                üïâÔ∏è ${photo.title}\r\n              </h3>\r\n              <p style=\"margin: 0 0 8px 0; font-size: 13px; color: #cccccc; display: flex; align-items: center; gap: 4px;\">\r\n                üìç ${photo.location}\r\n              </p>\r\n              <p style=\"margin: 0; font-size: 12px; color: #999999; line-height: 1.4;\">\r\n                ${photo.description}\r\n              </p>\r\n              <div style=\"margin-top: 12px; text-align: center;\">\r\n                <span style=\"background: linear-gradient(45deg, #1F51FF, #FF10F0); color: white; padding: 4px 12px; border-radius: 15px; font-size: 11px; font-weight: 600;\">\r\n                  Location ${index + 1}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          `,\r\n          pixelOffset: new window.google.maps.Size(0, -10)\r\n        });\r\n\r\n        marker.addListener('click', () => {\r\n          // Close all other info windows\r\n          markers.forEach(m => m.infoWindow && m.infoWindow.close());\r\n          \r\n          infoWindow.open(map, marker);\r\n          onMarkerClick && onMarkerClick(photo);\r\n        });\r\n\r\n        // Add hover effects\r\n        marker.addListener('mouseover', () => {\r\n          marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n        });\r\n\r\n        marker.addListener('mouseout', () => {\r\n          if (!isSelected) {\r\n            marker.setAnimation(null);\r\n          }\r\n        });\r\n\r\n        marker.infoWindow = infoWindow;\r\n\r\n        // Auto-open info window for selected photo\r\n        if (isSelected) {\r\n          infoWindow.open(map, marker);\r\n          map.panTo(photo.coordinates);\r\n          map.setZoom(16);\r\n        }\r\n\r\n        return marker;\r\n      });\r\n\r\n      // Add Cuttack city center marker\r\n      const cityMarker = new window.google.maps.Marker({\r\n        position: { lat: 20.4625, lng: 85.8828 },\r\n        map: map,\r\n        title: \"Cuttack City Center\",\r\n        icon: {\r\n          url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\r\n            <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <defs>\r\n                <filter id=\"cityGlow\">\r\n                  <feGaussianBlur stdDeviation=\"4\" result=\"coloredBlur\"/>\r\n                  <feMerge> \r\n                    <feMergeNode in=\"coloredBlur\"/>\r\n                    <feMergeNode in=\"SourceGraphic\"/>\r\n                  </feMerge>\r\n                </filter>\r\n              </defs>\r\n              <circle cx=\"30\" cy=\"30\" r=\"25\" fill=\"rgba(255, 215, 0, 0.2)\" stroke=\"#FFD700\" stroke-width=\"3\" stroke-dasharray=\"5,5\" filter=\"url(#cityGlow)\"/>\r\n              <text x=\"30\" y=\"25\" text-anchor=\"middle\" fill=\"#FFD700\" font-size=\"16\" font-weight=\"bold\">üèõÔ∏è</text>\r\n              <text x=\"30\" y=\"40\" text-anchor=\"middle\" fill=\"#FFD700\" font-size=\"8\" font-weight=\"bold\">CUTTACK</text>\r\n            </svg>\r\n          `),\r\n          scaledSize: new window.google.maps.Size(60, 60),\r\n          anchor: new window.google.maps.Point(30, 30)\r\n        }\r\n      });\r\n\r\n      const cityInfoWindow = new window.google.maps.InfoWindow({\r\n        content: `\r\n          <div style=\"\r\n            background: linear-gradient(135deg, #111111 0%, #1a1a2e 100%);\r\n            color: #ffffff;\r\n            max-width: 200px;\r\n            border-radius: 12px;\r\n            padding: 16px;\r\n            border: 2px solid #FFD700;\r\n            box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);\r\n            text-align: center;\r\n          \">\r\n            <h3 style=\"margin: 0 0 8px 0; color: #FFD700; font-size: 18px; font-weight: 600;\">\r\n              üèõÔ∏è Cuttack City Center\r\n            </h3>\r\n            <p style=\"margin: 0 0 8px 0; font-size: 13px; color: #cccccc;\">\r\n              Historic city in Odisha, India\r\n            </p>\r\n            <p style=\"margin: 0; font-size: 12px; color: #999999; line-height: 1.4;\">\r\n              Famous for silver filigree work, festivals, and rich cultural heritage\r\n            </p>\r\n          </div>\r\n        `\r\n      });\r\n\r\n      cityMarker.addListener('click', () => {\r\n        cityInfoWindow.open(map, cityMarker);\r\n      });\r\n\r\n      newMarkers.push(cityMarker);\r\n      setMarkers(newMarkers);\r\n    }\r\n  }, [map, photos, selectedPhoto, onMarkerClick]);\r\n\r\n  return (\r\n    <div \r\n      ref={mapRef} \r\n      style={{ \r\n        width: '100%', \r\n        height: '100%',\r\n        borderRadius: '15px',\r\n        overflow: 'hidden'\r\n      }} \r\n    />\r\n  );\r\n};\r\n\r\nexport default GoogleMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}